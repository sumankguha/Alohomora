#! /usr/bin/env bash

# 0. HELPER SECTION
# -----------------
read -d '' usage << "BLOCK"
DESCRIPTION:
This script runs over the ICSS files that are generated by Steve Cabilio's analysis program. The program generates metadata and takes the pass 1â€“4 values to generate a table for the day. Finally, that gets saved in a .csv file.
The output filename convention is <YYYY-MM-DD>_<SubjectID>_ICSS_<ExperimentType>_preprocessed.csv

USAGE:
preprocessFiles -FLAG(S)/--LONG_NAME_OF_FLAG(S) <ARGUMENTS>

INPUT FLAGS:
	--help or -h		:	helper text
 	--file or -f		:	name of file on which the script will run
	--behavior or -b	:	Behavior that was performed. Either ICSS or IVSA. This is set to ICSS by default. As of now, the IVSA is just a placeholder.

EXAMPLE:
	preprocessFiles -f ./ANA_2018-09-04_SG8.CSV
	preprocessFiles -f ./ANA_2018-09-04_SG8.CSV -b ICSS

	This generates 2018-09-04_SG8_ICSS_RF_preprocessed.csv in the same folder where the ANA_2018-09-4_SG8.CSV files are

CAVEAT:
This script needs to be evoked in the directory where the ANA_2018-09-04_SG8.CSV file is present

VERSION: 0.1
RELEASE DATE: Wednesday, Jan 23 2019
AUTHOR: Suman Guha -- @sumankguha (github), @sug893 (code.harvard.edu)
BLOCK

# 1. FUNCTION SECTION
# -------------------

# 2. INPUT SECTION
# ----------------
# Converting flags from long form to short form
for opt in $@; do
	shift
	case $opt in
		--help) 	set -- $@ -h;;
		--file)		set -- $@ -f;;
		--behavior) set -- $@ -b;;
		*)		set -- $@ $opt;;
	esac
done
# Setting default parameters for input variables
switch="ICSS"

# Setting parameters according to flags
while getopts "hf:b" opt; do
	case $opt in
		h) echo "$usage"; exit 0;;
		f) fileName=$OPTARG;;
		b) switch=$OPTARG;;
	esac
done

# 3. MAIN SECTION
# ---------------

case $switch in
	"ICSS")
		# generating variables that will be used to create data frame
		# Structure of data frame
		# Date 				| Subject | Experiment	| Pass 	| T0 	| M50 | MaxRate
		# 2018-09-04	| SG8 		| RF					| 1			| #		| #		| #
		# 2018-09-04	| SG8 		| RF					| 2			| #		| #		| #
		# 2018-09-04	| SG8 		| RF					| 3			| #		| #		| #
		# ...
		# ...
		# ...

		header="Date,Subject,Experiment,Pass,T0,M50,MaxRate"
		experimentDate=$(cat $fileName | grep Date -A 1 | tail -n 1 | awk 'BEGIN {FS=","} {print $6}')
		subject=$(cat $fileName | grep Date -A 1 | tail -n 1 | awk 'BEGIN {FS=","} {print $3}')
		experiment=$(cat $fileName | grep Date -A 1 | tail -n 1 | awk 'BEGIN {FS=","} {print $4}')
		pass=(1 2 3 4)
		t0=($(cat $fileName | grep T0, | sed 's/T0,//g' | awk 'BEGIN {FS=","} {print $0}' | sed 's/,/ /g'))
		m50=($(cat $fileName | grep M50, | sed 's/M50,//g' | awk 'BEGIN {FS=","} {print $0}' | sed 's/,/ /g'))
		maxRate=($(cat $fileName | grep MaxR, | sed 's/MaxR,//g' | awk 'BEGIN {FS=","} {print $0}' | sed 's/,/ /g'))
		line1=$experimentDate,$subject,$experiment,${pass[0]},${t0[0]},${m50[0]},${maxRate[0]}
		line2=$experimentDate,$subject,$experiment,${pass[1]},${t0[1]},${m50[1]},${maxRate[1]}
		line3=$experimentDate,$subject,$experiment,${pass[2]},${t0[2]},${m50[2]},${maxRate[2]}
		line4=$experimentDate,$subject,$experiment,${pass[3]},${t0[3]},${m50[3]},${maxRate[3]}
		outputFileName=$experimentDate"_"$subject"_ICSS_"$experiment"_preprocessed.csv"
		echo $header $line1 $line2 $line3 $line4 | tr -s ' ' '\n' > $outputFileName
		;;
	"IVSA")
		;;
esac
